//1463
let fs = require('fs').readFileSync('testinput').toString();
let N = Number(fs);
// dp = new Array(N + 1).fill(1000000);
// [dp[1], dp[2], dp[3]] = [0, 1, 1];
// for (let i = 2; i <= N; i++) {
// 	dp[i] = Math.min(dp[i - 1] + 1, dp[i]);
// 	if (i * 3 <= 1000000) {
// 		dp[i * 3] = Math.min(dp[i] + 1, dp[i * 3]);
// 	}
// 	if (i * 2 <= 1000000) {
// 		dp[i * 2] = Math.min(dp[i] + 1, dp[i * 2]);
// 	}
// }
// console.log(dp[N]);
// let fs = require('fs').readFileSync('dev/stdin').toString();
// let N = Number(fs);
dp = new Array(N + 1).fill(0);
for (let i = 2; i <= N; i++) {
	dp[i] = dp[i - 1] + 1;
	if (i % 2 === 0) {
		dp[i] = Math.min(dp[i], dp[i / 2] + 1);
	}
	if (i % 3 === 0) {
		dp[i] = Math.min(dp[i], dp[i / 3] + 1);
	}
}
console.log(dp);
// function countDP(i) {
//     if (dp[i] === undefined) {
//         if (i % 3 === 0) {
//             dp[i] = Math.min(countDP(i - 1), countDP(i / 3)) + 1;
//         } else if (i % 2 === 0) {
// 			dp[i] = Math.min(countDP(i - 1), countDP(i / 2)) + 1;
//         } else {
// 			dp[i] = countDP(i - 1) + 1;
// 		}
//     }
//     return dp[i];
// }
