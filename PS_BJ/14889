//14889
const { group } = require('console');
let fs = require('fs');
let input = fs.readFileSync('testinput').toString().split('\n');
let N = Number(input.shift());
let synergy = input.map(elem => elem.split(' ').map(elem => +elem));
let result = Number.MAX_VALUE;

//groping(0, 0, []);
console.log(result);
let overWrapCheck = false;
const teamA = [], teamB = [];
makeTeam(0);
//console.log(teamA, teamB);
function makeTeam(count) {
    if(teamA.length === 1 && teamB.length === N-1){
        overWrapCheck = true;
    }
    if (count === N) {
        if (teamA.length === N / 2) { 
            //answer = Math.min(answer, curr); 
        }
        return;
    }

    if(!overWrapCheck){
        if (teamA.length < N / 2) { 
            teamA.push(count);
            makeTeam(count + 1);
            teamA.pop();
        }

        teamB.push(count);
        makeTeam(count + 1);
        teamB.pop();
        console.log(teamA, teamB)
    }
}
/*
function groping(index, elem, group1) {
    if (index === N / 2) {
        let group2 = [];
        for (let elem = 0; elem < N; elem++) {
            if (!group1.includes(elem))
                group2.push(elem);
        }
        let temp = scoreDifference(group1, group2);
       if (result > temp)
            result = temp;
        return ;
    } else {
        for (let i = elem; i < N; i++) {
            group1.push(i);
            groping(index + 1, i + 1, group1);
            group1.pop();
        }
    }
}

function scoreDifference(group1, group2) {
    let score = 0, i, j, score2 = 0;
    for (i = 0; i < group1.length - 1; i++) {
        for (j = i  + 1; j < group1.length; j++) {
            score += synergy[group1[i]][group1[j]];
            score += synergy[group1[j]][group1[i]];
        }
    }
    for (i = 0; i < group2.length - 1; i++) {
        for (j = i + 1; j < group2.length; j++) {
            score2 += synergy[group2[i]][group2[j]];
            score2 += synergy[group2[j]][group2[i]];
        }
    }
    return Math.abs(score - score2);
}
*/